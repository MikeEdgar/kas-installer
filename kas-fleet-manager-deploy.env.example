# Credentials to authenticate to DEX itself.
# In this case were authenticating against Observatorium's Stage DEX
# deployed by running the services team
DEX_USERNAME=<observatorium-dex-username>
DEX_PASSWORD=<observatorium-dex-password>

# Credentials to authenticate to DEX using the tenant.
# In this case we are configuring 'tenant' for this observatorium and this
# are the tenant-level credentials to authenticate using that tenant
DEX_SECRET=<observatorium-dex-secret-name>

# Credentials to be able to communicate with Observatorium. This is used by
# two actors from the KAS Fleet Manager point of view:
# · KAS Fleet Manager uses it to pull some metrics directly from Observatorium
# · They are passed down to the Observability Operator so it can push/pull
# metrics
OBSERVATORIUM_SERVICE_TOKEN=<observatorium-service-token>

# GitHub Personal Access token to be used by Observability Operator to fetch the
# Observability configuration from the Observability configuration git repository.
# The token should have read access to the configuration git repository.
OBSERVABILITY_CONFIG_ACCESS_TOKEN=<observability-config-access-token>

# .dockercfg content https://kubernetes.io/docs/concepts/configuration/secret/#docker-config-secrets
# to be used for the Strimzi Operator pull secret
STRIMZI_OPERATOR_IMAGEPULL_SECRET=<strimzi-operator-image-pull-secret-dockercfg-content>
# .dockercfg content https://kubernetes.io/docs/concepts/configuration/secret/#docker-config-secrets
# to be used for the KAS FleetShard Operator pull secret
KAS_FLEETSHARD_OPERATOR_IMAGEPULL_SECRET=<strimzi-operator-image-pull-secret-dockercfg-content>


# MAS SSO Base URL. Used by both KAS Fleet Shard Operator and KAS Fleet Manager
MAS_SSO_BASE_URL=<mas-sso-base-url>

MAS_SSO_CLIENT_ID=<mas-sso-client-id>
MAS_SSO_CLIENT_SECRET=<-mas-sso-client-secret>
MAS_SSO_CRT=<mas-sso-crt-content>
MAS_SSO_REALM=<mas-sso-realm>

MAS_SSO_DATA_PLANE_CLUSTER_REALM=<mas-sso-data-plane-cluster-realm>
MAS_SSO_DATA_PLANE_CLUSTER_CLIENT_ID=<mas-sso-data-plane-cluster-client-id>
MAS_SSO_DATA_PLANE_CLUSTER_CLIENT_SECRET=<mas-sso-data-plane-cluster-client-secret>

OSD_IDP_MAS_SSO_REALM=<mas-sso-osd-idp-realm>

KAFKA_TLS_CERT=<kafka-tls-cert>
KAFKA_TLS_KEY=<kafka-tls-key>

# KAS Fleet Manager container image registry
IMAGE_REGISTRY=<kas-fleet-manager-image-registry>
# KAS Fleet Manager container image repository
IMAGE_REPOSITORY=<kas-fleet-manager-image-repository>
# KAS Fleet Manager container image tag
IMAGE_TAG=<kas-fleet-manager-image-tag>
# KAS Fleet Manager container image repository login credentials
IMAGE_REPOSITORY_USERNAME=<kas-fleet-manager-image-repository-username>
IMAGE_REPOSITORY_PASSWORD=<kas-fleet-manager-image-repository-password>
# Git reference for the KAS Fleet Manager bf2 repository. It can be a commit, tag
# or branch
KAS_FLEET_MANAGER_BF2_REF=<kas-fleet-manager-bf2-ref>

# The URL of the JSON web token signing certificates
# The JSON Web Key Set (JWKS) URL containing the public keys
# to verify JSON Web Tokens (JWT) 
JWKS_URL=<jwks-url>

# K8s namespace where KAS Fleet Manager deployment
# is to be deployed
KAS_FLEET_MANAGER_NAMESPACE=<kas-fleet-manager-k8s-namespace>

DATA_PLANE_CLUSTER_CLUSTER_ID=<data-plane-cluster-id>
DATA_PLANE_CLUSTER_REGION=<data-plane-cluster-region>

KAFKA_SHARDED_NLB_INGRESS_CONTROLLER_DOMAIN=<kafka-sharded-nlb-ingress-domain-name>
DATA_PLANE_CLUSTER_DNS_NAME=<data-plane-cluster-dns-name>
